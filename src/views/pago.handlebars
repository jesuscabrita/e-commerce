<style>
    .card-container {
        width: 500px;
        margin: 0 auto;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        background-color: #f9f9f9;
    }

    .card-element {
        padding: 20px;
        border-radius: 8px;
        background-color: #fff;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .card-errors {
        color: #dc3545;
        font-size: 14px;
        margin-top: 8px;
    }

    .pay-button {
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 4px;
        padding: 10px 20px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s;
    }

    .pay-button:hover {
        background-color: #0056b3;
    }

    .card-simulated {
        width: 100%;
        height: 200px;
        background-color: #f1f1f1;
        border-radius: 8px;
        position: relative;
        overflow: hidden;
    }

    .card-simulated .chip {
        width: 40px;
        height: 30px;
        background-color: #888;
        position: absolute;
        top: 30px;
        left: 30px;
        border-radius: 5px;
    }

    .card-simulated .card-number {
        position: absolute;
        bottom: 50px;
        left: 30px;
        font-size: 18px;
        color: #333;
    }

    .card-simulated .expiration-date {
        position: absolute;
        bottom: 30px;
        right: 30px;
        font-size: 16px;
        color: #333;
    }

    .card-simulated .card-holder {
        position: absolute;
        bottom: 80px;
        left: 30px;
        font-size: 16px;
        color: #333;
        font-weight: bold;
    }

    label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
    }

    input[type="text"],
    input[type="email"] {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-bottom: 10px;
    }

    .product-table {
        width: 100%;
        margin-top: 20px;
        border-collapse: collapse;
    }

    .product-table th,
    .product-table td {
        padding: 12px;
        border-bottom: 1px solid #ddd;
    }

    .product-table th {
        text-align: left;
    }

    .total-row {
        font-weight: bold;
        text-align: right;
    }

    .total-label {
        padding-right: 10px;
    }

    .con {
        display: flex;
        flex-direction: row;
    }

    #overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .overlay-content {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .spinner {
        border: 4px solid rgba(255, 255, 255, 0.3);
        border-top: 4px solid #ffffff;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        animation: spin 2s linear infinite;
    }
    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>
<div class="con container">
    <div class="card-container row" data-carritoid="{{cart.cart._id}}" data-usercardid="{{cart._id}}">
        {{#if cart.cart.products.length}}
        <table class="product-table">
            <thead>
                <tr>
                    <th>Cantidad</th>
                    <th>Producto</th>
                    <th>Precio</th>
                </tr>
            </thead>
            <tbody>
                {{#each cart.cart.products}}
                <tr>
                    <td>{{this.quantity}}</td>
                    <td>{{this.product.title}}</td>
                    <td>${{this.product.price}}</td>
                </tr>
                {{/each}}
                <tr class="total-row">
                    <td class="total-label">Total a pagar:</td>
                    <td>${{sumTotalPrice cart.cart.products}}</td>
                </tr>
            </tbody>
        </table>
        {{else}}
        <p>No hay productos aún</p>
        {{/if}}
    </div>
    <div class="card-container">
        <div class="card-element">
            <div class="card-simulated">
                <div class="chip"></div>
                <div class="card-number">**** **** **** 1234</div>
                <div class="expiration-date">MM/AA</div>
                <div class="card-holder">Nombre Apellido</div>
            </div>
        </div>
        <form>
            <label for="name">Nombre y Apellido:</label>
            <input type="text" id="name" name="name" required>
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
            <div id="card-element" class="card-element"></div>
            <div id="card-errors" class="card-errors" role="alert"></div>
            <button id="pay-button" class="pay-button" data-cardid="{{this._id}}" data-userid="{{this.userID}}"
                data-usercardid="{{cart._id}}">Pagar</button>
            <button id="cancel-button" class="btn btn-danger">Cancelar compra</button>
        </form>
    </div>
    <div id="overlay" style="display: none;">
        <div class="overlay-content">
            <div class="spinner"></div>
        </div>
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
    const stripe = Stripe('pk_test_51NbQJVK8VQreyVwzHdIIc9iSAEDmPMFBENs5GQML2c54aGWsxB3KEbey0MfVvJqFOf76XbDogwDa3jPEF3YE38Uh00ZWxftGmF');
    const elements = stripe.elements();
    const cardElement = elements.create('card');

    cardElement.mount('#card-element');

    const payButton = document.getElementById('pay-button');
    const paymentResult = document.getElementById('payment-result');
    const cardErrors = document.getElementById('card-errors');
    const usercartID = payButton.getAttribute('data-usercardid');

    payButton.addEventListener('click', async (event) => {
        event.preventDefault(); 
        const overlay = document.getElementById('overlay');
        overlay.style.display = 'block';

        const response = await fetch('https://e-commerce-jesus.vercel.app/charge/' + usercartID, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                productId: '{{ producto._id }}'
            })
        });
        const data = await response.json();
        console.log('data', data)

        const { error, paymentIntent } = await stripe.confirmCardPayment(data.clientSecret, {
            payment_method: {
                card: cardElement,
                billing_details: {
                    name: document.getElementById('name').value,
                    email: document.getElementById('email').value
                }
            }
        });
        overlay.style.display = 'none';

        if (error) {
        if (error.type === 'validation_error') {
            alert(error.message);
        } else {
            alert(error.message);
        }
    } else if (paymentIntent && paymentIntent.status === 'succeeded') {
        overlay.style.display = 'block'; 
        try {
            const userID = '{{this.userID}}'; 

            const response = await fetch(`/api/ticket/${usercartID}/purchase`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    userID: userID
                })
            });

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error);
            }

            const ticket = await response.json();
            console.log('Ticket creado:', ticket.ticket);
            alert('Pago realizado con exito');
            window.location.href = `/ticket/${ticket.ticket.userID}`;
        } catch (error) {
            console.error('error', error);
            alert(error);
        } finally {
            overlay.style.display = 'none'; 
        }
    }
});

document.addEventListener("DOMContentLoaded", () => {
    // Resto de tu código existente

    const cancelButton = document.getElementById('cancel-button');
    cancelButton.addEventListener('click', () => {
        const usercartID = '{{cart._id}}';
        window.location.href = `https://e-commerce-jesus.vercel.app/products`;
    });
});
</script>